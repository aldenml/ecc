name: iOS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:

  arm64:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: install packages
        run: |
          brew install ninja doxygen graphviz autoconf automake

      - name: cmake configure
        run: |
          export XCODEDIR="$(xcode-select -p)"
          export BASEDIR="${XCODEDIR}/Platforms/iPhoneOS.platform/Developer"
          export PATH="${BASEDIR}/usr/bin:$BASEDIR/usr/sbin:$PATH"
          export ECC_IOS_SYSROOT="${BASEDIR}/SDKs/iPhoneOS.sdk"
          export ECC_CFLAGS="-arch arm64 -isysroot ${ECC_IOS_SYSROOT} -miphoneos-version-min=11.0 -Wno-unused-command-line-argument"
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=iOS -B build -G "Ninja" .

      - name: c build
        run: |
          export XCODEDIR="$(xcode-select -p)"
          export BASEDIR="${XCODEDIR}/Platforms/iPhoneOS.platform/Developer"
          export PATH="${BASEDIR}/usr/bin:$BASEDIR/usr/sbin:$PATH"
          export ECC_IOS_SYSROOT="${BASEDIR}/SDKs/iPhoneOS.sdk"
          export ECC_CFLAGS="-arch arm64 -isysroot ${ECC_IOS_SYSROOT} -miphoneos-version-min=11.0 -Wno-unused-command-line-argument"
          cmake --build build --config Release --parallel 2 --target ecc_static

      - uses: actions/upload-artifact@v3
        with:
          name: ecc-ios-arm64
          path: |
            build/libecc_static.a
          retention-days: 10

#  arm64-sim:
#    runs-on: macos-12
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: recursive
#      - name: install packages
#        run: |
#          brew install ninja doxygen graphviz autoconf automake
#
#      - name: cmake configure
#        run: |
#          export ECC_CFLAGS="-arch arm64 -mios-version-min=9.0.0"
#          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=iOS -B build -G Xcode .
#
#      - name: c build
#        run: |
#          export ECC_CFLAGS="-arch arm64 -mios-version-min=9.0.0"
#          cmake --build build --config Release --parallel 2 --target ecc_static -- -sdk iphonesimulator
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ecc-ios-arm64-simulator
#          path: |
#            build/Release-iphonesimulator/libecc_static.a
#          retention-days: 10
#
#  x86_64-sim:
#    runs-on: macos-12
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: recursive
#      - name: install packages
#        run: |
#          brew install ninja doxygen graphviz autoconf automake
#
#      - name: cmake configure
#        run: |
#          export ECC_CFLAGS="-arch x86_64 -mios-version-min=9.0.0"
#          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=iOS -B build -G Xcode .
#
#      - name: c build
#        run: |
#          export ECC_CFLAGS="-arch x86_64 -mios-version-min=9.0.0"
#          cmake --build build --config Release --parallel 2 --target ecc_static -- -sdk iphonesimulator
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ecc-ios-x86_64-simulator
#          path: |
#            build/Release-iphonesimulator/libecc_static.a
#          retention-days: 10
