name: macOS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:

  x86_64:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: install packages
        run: |
          brew install ninja doxygen graphviz autoconf automake
          brew install python
          pip3 install --upgrade build
          pip3 install cffi

      - name: build coverage
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON -DLLVM_COV_PATH=/Library/Developer/CommandLineTools/usr/bin/llvm-cov -DLLVM_PROFDATA_PATH=/Library/Developer/CommandLineTools/usr/bin/llvm-profdata -B build-cov -G "Ninja" .

      - name: test coverage
        run: cmake --build build-cov --config Debug --parallel 2 --target ccov-all-export

      - name: upload coverage
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l C -r ./build-cov/ccov/coverage.lcov
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: c build
        run: |
          export ECC_CFLAGS="-arch x86_64"
          ./build-c.sh
          otool -L build/libecc.dylib

      - name: jvm tests
        run: |
          otool -L bindings/jvm/libecc-jvm.dylib
          cd bindings/jvm
          ./gradlew test
          cd ../..

      - name: python wheel
        run: |
          cd bindings/python
          python3 cffi_build.py
          python3 -m build --wheel
          cd ../..

      - name: python tests
        run: |
          cd bindings/python
          python3 -m unittest
          cd ../..

      - uses: actions/upload-artifact@v3
        with:
          name: ecc-macos-x86_64
          path: |
            build/libecc.dylib
            build/libecc-jvm.dylib
            bindings/python/src/libecc/_libecc_cffi.*.so
          retention-days: 10

  arm64:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: install packages
        run: |
          brew install ninja doxygen graphviz autoconf automake
          brew install python
          pip3 install --upgrade build
          pip3 install cffi

      - name: c build
        run: |
          export ECC_CFLAGS="-arch arm64"
          ./build-c.sh

      - name: python wheel
        run: |
          export CFLAGS="-arch arm64"
          export LDFLAGS="-arch arm64"
          export ARCHFLAGS="-arch arm64"
          cd bindings/python
          python3 cffi_build.py
          python3 -m build --wheel
          cd ../..

      - uses: actions/upload-artifact@v3
        with:
          name: ecc-macos-arm64
          path: |
            build/libecc.dylib
            build/libecc-jvm.dylib
            bindings/python/src/libecc/_libecc_cffi.*.so
          retention-days: 10
