name: macOS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  x86_64:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: install packages
        run: |
          brew install ninja doxygen graphviz autoconf automake
          brew install python
          pip3 install --upgrade build
          pip3 install cffi

      - name: build coverage
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON -DLLVM_COV_PATH=/Library/Developer/CommandLineTools/usr/bin/llvm-cov -DLLVM_PROFDATA_PATH=/Library/Developer/CommandLineTools/usr/bin/llvm-profdata -B build-cov -G "Ninja" .
          cmake --build build-cov --config Debug --parallel 2 --target libsodium-external
          cmake --build build-cov --config Debug --parallel 2 --target blst-external

      - name: test coverage
        run: cmake --build build-cov --config Debug --parallel 2 --target ccov-all-export

      - name: upload coverage
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l C -r ./build-cov/ccov/coverage.lcov
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: c build
        run: |
          ./build-c.sh
          otool -L build/libecc.dylib

      - name: jvm tests
        run: |
          otool -L bindings/jvm/libecc-jvm.dylib
          cd bindings/jvm
          ./gradlew test
          cd ../..

      - name: python wheel
        run: |
          cd bindings/python
          python3 cffi_build.py
          python3 -m build --wheel
          cd ../..

      - name: python tests
        run: |
          cd bindings/python
          python3 -m unittest
          cd ../..

      - name: codesign binaries
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 -D > certificate.p12
          security create-keychain -p $MACOS_CERTIFICATE_PWD build.keychain security default-keychain -s build.keychain
          security unlock-keychain -p $MACOS_CERTIFICATE_PWD build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $MACOS_CERTIFICATE_PWD build.keychain
          security find-identity -v
          /usr/bin/codesign --force -s 474F79F040D71C9A6C5C813FA54F498676D51D93 build/libecc.dylib -v
          /usr/bin/codesign --force -s 474F79F040D71C9A6C5C813FA54F498676D51D93 build/libecc-jvm.dylib -v
          /usr/bin/codesign --force -s 474F79F040D71C9A6C5C813FA54F498676D51D93 bindings/python/src/libecc/_libecc_cffi.cpython-39-darwin.so -v

      - uses: actions/upload-artifact@v2
        with:
          name: ecc-macos
          path: |
            build/libecc.dylib
            build/libecc-jvm.dylib
            bindings/python/src/libecc/_libecc_cffi.*.so
          retention-days: 5
