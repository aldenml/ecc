name: Windows

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:

  x86_64:
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            gcc
            cmake
            ninja
            make
            autoconf
            automake
            libtool
            libffi
            libffi-devel
            python
            python-pip
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'

      - name: install packages
        run: |
          pip install --upgrade build
          pip install cffi

      - name: cmake configure
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release -B build -G "Ninja" .

      - name: build libsodium
        run: |
          cd deps/libsodium
          ./configure "CFLAGS=-DSODIUM_STATIC=1 -O2 -Wno-cpp" --disable-dependency-tracking --prefix=/d/a/ecc/ecc/build/libsodium --disable-ssp --disable-shared --without-pthreads
          make -j2
          make install
          cd ../..

      - name: build blst
        run: |
          cd deps/blst
          ./build.sh -O2 -Wno-error
          cd ../..

      - name: c build
        run: |
          cmake --build build --config Release --parallel 2
          cp build/libecc.so build/libecc.dll
          cp build/libecc-jvm.so build/libecc-jvm.dll
          cp build/libecc-jvm.dll bindings/jvm/
          objdump -p build/libecc.dll | grep DLL

      - name: c tests
        run: |
          cd build
          ctest -C "Release" --rerun-failed --output-on-failure
          cd ..

      - name: jvm tests
        run: |
          objdump -p build/libecc-jvm.dll | grep DLL
          cd bindings/jvm
          ./gradlew test
          cd ../..

      - name: python wheel
        run: |
          cd bindings/python
          python cffi_build.py
          python -m build --wheel
          cd ../..

      - name: python tests
        run: |
          cd bindings/python
          python -m unittest
          cd ../..

      - uses: actions/upload-artifact@v3
        with:
          name: ecc-windows-x86_64
          path: |
            build/libecc.dll
            build/libecc-jvm.dll
            bindings/python/src/libecc/_libecc_cffi.*.pyd
          retention-days: 10
