var ecc;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 164:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
if(typeof Module==="undefined"){var Module={};}
var libecc_module=
function(libecc_module) {
  libecc_module = libecc_module || {};

var Module=libecc_module;var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_NODE=typeof process==="object";function ready(){readyPromiseResolve(Module)}function randomValueSetup(){if(Module.getRandomValue===undefined){try{var window_="object"===typeof window?window:self;var crypto_=typeof window_.crypto!=="undefined"?window_.crypto:window_.msCrypto;var randomValuesStandard=function(){var buf=new Uint32Array(1);crypto_.getRandomValues(buf);return buf[0]>>>0};randomValuesStandard();Module.getRandomValue=randomValuesStandard}catch(e){try{__webpack_require__.e(/* import() */ 938).then(__webpack_require__.t.bind(__webpack_require__, 938, 19)).then(crypto=>{var randomValueNodeJS=function(){var buf=crypto["randomBytes"](4);return(buf[0]<<24|buf[1]<<16|buf[2]<<8|buf[3])>>>0};randomValueNodeJS();Module.getRandomValue=randomValueNodeJS})}catch(e){throw"No secure random number generator found"}}}}randomValueSetup();function abort(what){throw what}for(var base64ReverseLookup=new Uint8Array(123),i=25;i>=0;--i){base64ReverseLookup[48+i]=52+i;base64ReverseLookup[65+i]=i;base64ReverseLookup[97+i]=26+i}base64ReverseLookup[43]=62;base64ReverseLookup[47]=63;function base64Decode(b64){if(typeof ENVIRONMENT_IS_NODE!=="undefined"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(b64,"base64");return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength)}var b1,b2,i=0,j=0,bLength=b64.length,output=new Uint8Array((bLength*3>>2)-(b64[bLength-2]=="=")-(b64[bLength-1]=="="));for(;i<bLength;i+=4,j+=3){b1=base64ReverseLookup[b64.charCodeAt(i+1)];b2=base64ReverseLookup[b64.charCodeAt(i+2)];output[j]=base64ReverseLookup[b64.charCodeAt(i)]<<2|b1>>4;output[j+1]=b1<<4|b2>>2;output[j+2]=b2<<6|base64ReverseLookup[b64.charCodeAt(i+3)]}return output}Module["wasm"]=base64Decode("");var HEAP8,HEAP16,HEAP32,HEAPU8,HEAPU16,HEAPU32,HEAPF32,HEAPF64;var wasmMemory,buffer,wasmTable;function updateGlobalBufferAndViews(b){buffer=b;HEAP8=new Int8Array(b);HEAP16=new Int16Array(b);HEAP32=new Int32Array(b);HEAPU8=new Uint8Array(b);HEAPU16=new Uint16Array(b);HEAPU32=new Uint32Array(b);HEAPF32=new Float32Array(b);HEAPF64=new Float64Array(b)}var ASM_CONSTS={40196:function(){return Module.getRandomValue()},40232:function(){if(Module.getRandomValue===undefined){try{var window_="object"===typeof window?window:self;var crypto_=typeof window_.crypto!=="undefined"?window_.crypto:window_.msCrypto;var randomValuesStandard=function(){var buf=new Uint32Array(1);crypto_.getRandomValues(buf);return buf[0]>>>0};randomValuesStandard();Module.getRandomValue=randomValuesStandard}catch(e){try{var crypto=require("crypto");var randomValueNodeJS=function(){var buf=crypto["randomBytes"](4);return(buf[0]<<24|buf[1]<<16|buf[2]<<8|buf[3])>>>0};randomValueNodeJS();Module.getRandomValue=randomValueNodeJS}catch(e){throw"No secure random number generator found"}}}}};function _abort(){throw"abort"}var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){var double=ch<105;if(double&&buf&1)buf++;readAsmConstArgsArray.push(double?HEAPF64[buf++>>1]:HEAP32[buf]);++buf}return readAsmConstArgsArray}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function abortOnCannotGrowMemory(requestedSize){abort("OOM")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}var asmLibraryArg={"a":_abort,"c":_emscripten_asm_const_int,"b":_emscripten_resize_heap};function initRuntime(asm){asm["e"]()}var imports={"a":asmLibraryArg};var _ecc_memzero,_ecc_randombytes,_ecc_bin2hex,_ecc_hex2bin,_ecc_concat2,_ecc_concat3,_ecc_concat4,_ecc_strxor,_ecc_I2OSP,_ecc_compare,_ecc_is_zero,_ecc_malloc,_ecc_free,_ecc_hash_sha256,_ecc_hash_sha512,_ecc_mac_hmac_sha256,_ecc_mac_hmac_sha512,_ecc_kdf_hkdf_sha256_extract,_ecc_kdf_hkdf_sha256_expand,_ecc_kdf_hkdf_sha512_extract,_ecc_kdf_hkdf_sha512_expand,_ecc_ed25519_is_valid_point,_ecc_ed25519_add,_ecc_ed25519_sub,_ecc_ed25519_from_uniform,_ecc_ed25519_random,_ecc_ed25519_scalar_random,_ecc_ed25519_scalar_invert,_ecc_ed25519_scalar_negate,_ecc_ed25519_scalar_complement,_ecc_ed25519_scalar_add,_ecc_ed25519_scalar_sub,_ecc_ed25519_scalar_mul,_ecc_ed25519_scalar_reduce,_ecc_ed25519_scalarmult,_ecc_ed25519_scalarmult_base,_ecc_ed25519_sign,_ecc_ed25519_sign_verify,_ecc_ed25519_sign_keypair,_ecc_ed25519_sign_seed_keypair,_ecc_ed25519_sign_sk_to_seed,_ecc_ed25519_sign_sk_to_pk,_ecc_ristretto255_is_valid_point,_ecc_ristretto255_add,_ecc_ristretto255_sub,_ecc_ristretto255_from_hash,_ecc_ristretto255_random,_ecc_ristretto255_scalar_random,_ecc_ristretto255_scalar_invert,_ecc_ristretto255_scalar_negate,_ecc_ristretto255_scalar_complement,_ecc_ristretto255_scalar_add,_ecc_ristretto255_scalar_sub,_ecc_ristretto255_scalar_mul,_ecc_ristretto255_scalar_reduce,_ecc_ristretto255_scalarmult,_ecc_ristretto255_scalarmult_base,_ecc_bls12_381_fp_random,_ecc_bls12_381_fp12_one,_ecc_bls12_381_fp12_is_one,_ecc_bls12_381_fp12_inverse,_ecc_bls12_381_fp12_sqr,_ecc_bls12_381_fp12_mul,_ecc_bls12_381_fp12_pow,_ecc_bls12_381_fp12_random,_ecc_bls12_381_g1_add,_ecc_bls12_381_g1_negate,_ecc_bls12_381_g1_generator,_ecc_bls12_381_g1_scalarmult,_ecc_bls12_381_g1_scalarmult_base,_ecc_bls12_381_g2_add,_ecc_bls12_381_g2_negate,_ecc_bls12_381_g2_generator,_ecc_bls12_381_g2_scalarmult_base,_ecc_bls12_381_scalar_random,_ecc_bls12_381_pairing,_ecc_bls12_381_pairing_miller_loop,_ecc_bls12_381_pairing_final_exp,_ecc_bls12_381_pairing_final_verify,_ecc_bls12_381_sign_keygen,_ecc_h2c_expand_message_xmd_sha256,_ecc_h2c_expand_message_xmd_sha512,_ecc_oprf_ristretto255_sha512_Evaluate,_ecc_oprf_ristretto255_sha512_BlindWithScalar,_ecc_oprf_ristretto255_sha512_HashToGroup,_ecc_oprf_ristretto255_sha512_HashToGroupWithDST,_ecc_oprf_ristretto255_sha512_Blind,_ecc_oprf_ristretto255_sha512_Unblind,_ecc_oprf_ristretto255_sha512_Finalize,_ecc_oprf_ristretto255_sha512_HashToScalarWithDST,_ecc_oprf_ristretto255_sha512_HashToScalar,_ecc_opaque_ristretto255_sha512_CreateCleartextCredentials,_ecc_opaque_ristretto255_sha512_CreateEnvelopeWithNonce,_ecc_opaque_ristretto255_sha512_BuildInnerEnvelope,_ecc_opaque_ristretto255_sha512_DeriveAuthKeyPair,_ecc_opaque_ristretto255_sha512_CreateEnvelope,_ecc_opaque_ristretto255_sha512_RecoverEnvelope,_ecc_opaque_ristretto255_sha512_RecoverKeys,_ecc_opaque_ristretto255_sha512_RecoverPublicKey,_ecc_opaque_ristretto255_sha512_GenerateAuthKeyPair,_ecc_opaque_ristretto255_sha512_CreateRegistrationRequestWithBlind,_ecc_opaque_ristretto255_sha512_CreateRegistrationRequest,_ecc_opaque_ristretto255_sha512_CreateRegistrationResponseWithOprfKey,_ecc_opaque_ristretto255_sha512_CreateRegistrationResponse,_ecc_opaque_ristretto255_sha512_FinalizeRequest,_ecc_opaque_ristretto255_sha512_CreateCredentialRequest,_ecc_opaque_ristretto255_sha512_CreateCredentialResponse,_ecc_opaque_ristretto255_sha512_RecoverCredentials,_ecc_opaque_ristretto255_sha512_3DH_Expand_Label,_ecc_opaque_ristretto255_sha512_3DH_Derive_Secret,_ecc_opaque_ristretto255_sha512_3DH_Preamble,_ecc_opaque_ristretto255_sha512_3DH_TripleDHIKM,_ecc_opaque_ristretto255_sha512_3DH_DeriveKeys,_ecc_opaque_ristretto255_sha512_3DH_ClientInit,_ecc_opaque_ristretto255_sha512_3DH_Start,_ecc_opaque_ristretto255_sha512_3DH_ClientFinish,_ecc_opaque_ristretto255_sha512_3DH_ClientFinalize,_ecc_opaque_ristretto255_sha512_3DH_ServerInit,_ecc_opaque_ristretto255_sha512_3DH_Response,_ecc_opaque_ristretto255_sha512_3DH_ServerFinish,_ecc_pre_schema1_MessageGen,_ecc_pre_schema1_DeriveKey,_ecc_pre_schema1_KeyGen,_ecc_pre_schema1_DeriveSigningKey,_ecc_pre_schema1_SigningKeyGen,_ecc_pre_schema1_EncryptWithSeed,_ecc_pre_schema1_Encrypt,_ecc_pre_schema1_ReKeyGen,_ecc_pre_schema1_ReEncrypt,_ecc_pre_schema1_DecryptLevel1,_ecc_pre_schema1_DecryptLevel2;WebAssembly.instantiate(Module["wasm"],imports).then(function(output){var asm=output.instance.exports;_ecc_memzero=asm["f"];_ecc_randombytes=asm["g"];_ecc_bin2hex=asm["h"];_ecc_hex2bin=asm["i"];_ecc_concat2=asm["j"];_ecc_concat3=asm["k"];_ecc_concat4=asm["l"];_ecc_strxor=asm["m"];_ecc_I2OSP=asm["n"];_ecc_compare=asm["o"];_ecc_is_zero=asm["p"];_ecc_malloc=asm["q"];_ecc_free=asm["r"];_ecc_hash_sha256=asm["t"];_ecc_hash_sha512=asm["u"];_ecc_mac_hmac_sha256=asm["v"];_ecc_mac_hmac_sha512=asm["w"];_ecc_kdf_hkdf_sha256_extract=asm["x"];_ecc_kdf_hkdf_sha256_expand=asm["y"];_ecc_kdf_hkdf_sha512_extract=asm["z"];_ecc_kdf_hkdf_sha512_expand=asm["A"];_ecc_ed25519_is_valid_point=asm["B"];_ecc_ed25519_add=asm["C"];_ecc_ed25519_sub=asm["D"];_ecc_ed25519_from_uniform=asm["E"];_ecc_ed25519_random=asm["F"];_ecc_ed25519_scalar_random=asm["G"];_ecc_ed25519_scalar_invert=asm["H"];_ecc_ed25519_scalar_negate=asm["I"];_ecc_ed25519_scalar_complement=asm["J"];_ecc_ed25519_scalar_add=asm["K"];_ecc_ed25519_scalar_sub=asm["L"];_ecc_ed25519_scalar_mul=asm["M"];_ecc_ed25519_scalar_reduce=asm["N"];_ecc_ed25519_scalarmult=asm["O"];_ecc_ed25519_scalarmult_base=asm["P"];_ecc_ed25519_sign=asm["Q"];_ecc_ed25519_sign_verify=asm["R"];_ecc_ed25519_sign_keypair=asm["S"];_ecc_ed25519_sign_seed_keypair=asm["T"];_ecc_ed25519_sign_sk_to_seed=asm["U"];_ecc_ed25519_sign_sk_to_pk=asm["V"];_ecc_ristretto255_is_valid_point=asm["W"];_ecc_ristretto255_add=asm["X"];_ecc_ristretto255_sub=asm["Y"];_ecc_ristretto255_from_hash=asm["Z"];_ecc_ristretto255_random=asm["_"];_ecc_ristretto255_scalar_random=asm["$"];_ecc_ristretto255_scalar_invert=asm["aa"];_ecc_ristretto255_scalar_negate=asm["ba"];_ecc_ristretto255_scalar_complement=asm["ca"];_ecc_ristretto255_scalar_add=asm["da"];_ecc_ristretto255_scalar_sub=asm["ea"];_ecc_ristretto255_scalar_mul=asm["fa"];_ecc_ristretto255_scalar_reduce=asm["ga"];_ecc_ristretto255_scalarmult=asm["ha"];_ecc_ristretto255_scalarmult_base=asm["ia"];_ecc_bls12_381_fp_random=asm["ja"];_ecc_bls12_381_fp12_one=asm["ka"];_ecc_bls12_381_fp12_is_one=asm["la"];_ecc_bls12_381_fp12_inverse=asm["ma"];_ecc_bls12_381_fp12_sqr=asm["na"];_ecc_bls12_381_fp12_mul=asm["oa"];_ecc_bls12_381_fp12_pow=asm["pa"];_ecc_bls12_381_fp12_random=asm["qa"];_ecc_bls12_381_g1_add=asm["ra"];_ecc_bls12_381_g1_negate=asm["sa"];_ecc_bls12_381_g1_generator=asm["ta"];_ecc_bls12_381_g1_scalarmult=asm["ua"];_ecc_bls12_381_g1_scalarmult_base=asm["va"];_ecc_bls12_381_g2_add=asm["wa"];_ecc_bls12_381_g2_negate=asm["xa"];_ecc_bls12_381_g2_generator=asm["ya"];_ecc_bls12_381_g2_scalarmult_base=asm["za"];_ecc_bls12_381_scalar_random=asm["Aa"];_ecc_bls12_381_pairing=asm["Ba"];_ecc_bls12_381_pairing_miller_loop=asm["Ca"];_ecc_bls12_381_pairing_final_exp=asm["Da"];_ecc_bls12_381_pairing_final_verify=asm["Ea"];_ecc_bls12_381_sign_keygen=asm["Fa"];_ecc_h2c_expand_message_xmd_sha256=asm["Ga"];_ecc_h2c_expand_message_xmd_sha512=asm["Ha"];_ecc_oprf_ristretto255_sha512_Evaluate=asm["Ia"];_ecc_oprf_ristretto255_sha512_BlindWithScalar=asm["Ja"];_ecc_oprf_ristretto255_sha512_HashToGroup=asm["Ka"];_ecc_oprf_ristretto255_sha512_HashToGroupWithDST=asm["La"];_ecc_oprf_ristretto255_sha512_Blind=asm["Ma"];_ecc_oprf_ristretto255_sha512_Unblind=asm["Na"];_ecc_oprf_ristretto255_sha512_Finalize=asm["Oa"];_ecc_oprf_ristretto255_sha512_HashToScalarWithDST=asm["Pa"];_ecc_oprf_ristretto255_sha512_HashToScalar=asm["Qa"];_ecc_opaque_ristretto255_sha512_CreateCleartextCredentials=asm["Ra"];_ecc_opaque_ristretto255_sha512_CreateEnvelopeWithNonce=asm["Sa"];_ecc_opaque_ristretto255_sha512_BuildInnerEnvelope=asm["Ta"];_ecc_opaque_ristretto255_sha512_DeriveAuthKeyPair=asm["Ua"];_ecc_opaque_ristretto255_sha512_CreateEnvelope=asm["Va"];_ecc_opaque_ristretto255_sha512_RecoverEnvelope=asm["Wa"];_ecc_opaque_ristretto255_sha512_RecoverKeys=asm["Xa"];_ecc_opaque_ristretto255_sha512_RecoverPublicKey=asm["Ya"];_ecc_opaque_ristretto255_sha512_GenerateAuthKeyPair=asm["Za"];_ecc_opaque_ristretto255_sha512_CreateRegistrationRequestWithBlind=asm["_a"];_ecc_opaque_ristretto255_sha512_CreateRegistrationRequest=asm["$a"];_ecc_opaque_ristretto255_sha512_CreateRegistrationResponseWithOprfKey=asm["ab"];_ecc_opaque_ristretto255_sha512_CreateRegistrationResponse=asm["bb"];_ecc_opaque_ristretto255_sha512_FinalizeRequest=asm["cb"];_ecc_opaque_ristretto255_sha512_CreateCredentialRequest=asm["db"];_ecc_opaque_ristretto255_sha512_CreateCredentialResponse=asm["eb"];_ecc_opaque_ristretto255_sha512_RecoverCredentials=asm["fb"];_ecc_opaque_ristretto255_sha512_3DH_Expand_Label=asm["gb"];_ecc_opaque_ristretto255_sha512_3DH_Derive_Secret=asm["hb"];_ecc_opaque_ristretto255_sha512_3DH_Preamble=asm["ib"];_ecc_opaque_ristretto255_sha512_3DH_TripleDHIKM=asm["jb"];_ecc_opaque_ristretto255_sha512_3DH_DeriveKeys=asm["kb"];_ecc_opaque_ristretto255_sha512_3DH_ClientInit=asm["lb"];_ecc_opaque_ristretto255_sha512_3DH_Start=asm["mb"];_ecc_opaque_ristretto255_sha512_3DH_ClientFinish=asm["nb"];_ecc_opaque_ristretto255_sha512_3DH_ClientFinalize=asm["ob"];_ecc_opaque_ristretto255_sha512_3DH_ServerInit=asm["pb"];_ecc_opaque_ristretto255_sha512_3DH_Response=asm["qb"];_ecc_opaque_ristretto255_sha512_3DH_ServerFinish=asm["rb"];_ecc_pre_schema1_MessageGen=asm["sb"];_ecc_pre_schema1_DeriveKey=asm["tb"];_ecc_pre_schema1_KeyGen=asm["ub"];_ecc_pre_schema1_DeriveSigningKey=asm["vb"];_ecc_pre_schema1_SigningKeyGen=asm["wb"];_ecc_pre_schema1_EncryptWithSeed=asm["xb"];_ecc_pre_schema1_Encrypt=asm["yb"];_ecc_pre_schema1_ReKeyGen=asm["zb"];_ecc_pre_schema1_ReEncrypt=asm["Ab"];_ecc_pre_schema1_DecryptLevel1=asm["Bb"];_ecc_pre_schema1_DecryptLevel2=asm["Cb"];wasmTable=asm["s"];wasmMemory=asm["d"];updateGlobalBufferAndViews(wasmMemory.buffer);initRuntime(asm);ready()});function arraycopy(src,srcPos,dest,destPos,length){dest.set(src.subarray(srcPos,srcPos+length),destPos)}function mput(src,pos,length){arraycopy(src,0,HEAPU8,pos,length);return pos}function mget(pos,dest,length){arraycopy(HEAPU8,pos,dest,0,length)}function mzero(length){_ecc_memzero(0,length)}Module.ecc_memzero=((buf,n)=>{for(let i=0;i<n;i++)buf[i]=0});Module.ecc_randombytes=((buf,n)=>{const heap_size=n;const heap=_ecc_malloc(heap_size);const pBuf=heap;_ecc_randombytes(pBuf,n);mget(pBuf,buf,n);_ecc_free(heap,heap_size)});Module.ecc_concat2=((out,a1,a1_len,a2,a2_len)=>{const pA1=mput(a1,0,a1_len);const pA2=mput(a2,pA1+a1_len,a2_len);const pOut=pA2+a2_len;_ecc_concat2(pOut,pA1,a1_len,pA2,a2_len);mget(pOut,out,a1_len+a2_len);mzero(2*(a1_len+a2_len))});Module.ecc_concat3=((out,a1,a1_len,a2,a2_len,a3,a3_len)=>{const pA1=mput(a1,0,a1_len);const pA2=mput(a2,pA1+a1_len,a2_len);const pA3=mput(a3,pA2+a2_len,a3_len);const pOut=pA3+a3_len;_ecc_concat3(pOut,pA1,a1_len,pA2,a2_len,pA3,a3_len);mget(pOut,out,a1_len+a2_len+a3_len);mzero(2*(a1_len+a2_len+a3_len))});Module.ecc_concat4=((out,a1,a1_len,a2,a2_len,a3,a3_len,a4,a4_len)=>{const pA1=mput(a1,0,a1_len);const pA2=mput(a2,pA1+a1_len,a2_len);const pA3=mput(a3,pA2+a2_len,a3_len);const pA4=mput(a4,pA3+a3_len,a4_len);const pOut=pA4+a4_len;_ecc_concat4(pOut,pA1,a1_len,pA2,a2_len,pA3,a3_len,pA4,a4_len);mget(pOut,out,a1_len+a2_len);mzero(2*(a1_len+a2_len))});Module.ecc_strxor=((out,a,b,len)=>{const pA=mput(a,0,len);const pB=mput(a,pA+len,len);const pOut=pB+len;_ecc_strxor(pOut,pA,pB,len);mget(pOut,out,len);mzero(len+len+len)});Module.ecc_I2OSP=((out,x,xLen)=>{const pOut=0;_ecc_I2OSP(pOut,x,xLen);mget(pOut,out,xLen);mzero(xLen)});Module.ecc_compare=((a,b,len)=>{const pA=mput(a,0,len);const pB=mput(b,pA+len,len);const r=_ecc_compare(pA,pB,len);mzero(len+len);return r});Module.ecc_is_zero=((n,len)=>{const pN=mput(n,0,len);const r=_ecc_is_zero(pN,len);mzero(len);return r});Module.ecc_hash_sha256=((digest,input,input_len)=>{const pInput=mput(input,0,input_len);const pDigest=pInput+input_len;_ecc_hash_sha256(pDigest,pInput,input_len);mget(pDigest,digest,32);mzero(input_len+32)});Module.ecc_hash_sha512=((digest,input,input_len)=>{const pInput=mput(input,0,input_len);const pDigest=pInput+input_len;_ecc_hash_sha512(pDigest,pInput,input_len);mget(pDigest,digest,64);mzero(input_len+64)});Module.ecc_mac_hmac_sha256=((digest,text,text_len,key)=>{const pText=mput(text,0,text_len);const pKey=mput(key,pText+text_len,32);const pDigest=pKey+32;_ecc_mac_hmac_sha256(pDigest,pText,text_len,pKey);mget(pDigest,digest,32);mzero(text_len+32+32)});Module.ecc_mac_hmac_sha512=((digest,text,text_len,key)=>{const pText=mput(text,0,text_len);const pKey=mput(key,pText+text_len,32);const pDigest=pKey+32;_ecc_mac_hmac_sha512(pDigest,pText,text_len,pKey);mget(pDigest,digest,64);mzero(text_len+32+64)});Module.ecc_kdf_hkdf_sha256_extract=((prk,salt,salt_len,ikm,ikm_len)=>{const pSalt=mput(salt,0,salt_len);const pIkm=mput(ikm,pSalt+salt_len,ikm_len);const pPrk=pIkm+ikm_len;const r=_ecc_kdf_hkdf_sha256_extract(pPrk,pSalt,salt_len,pIkm,ikm_len);mget(pPrk,prk,32);mzero(salt_len+ikm_len+32);return r});Module.ecc_kdf_hkdf_sha256_expand=((okm,prk,info,info_len,len)=>{const pPrk=mput(prk,0,32);const pInfo=mput(info,pPrk+32,info_len);const pOkm=pInfo+info_len;const r=_ecc_kdf_hkdf_sha256_expand(pOkm,pPrk,pInfo,info_len,len);mget(pOkm,okm,len);mzero(32+info_len+len);return r});Module.ecc_kdf_hkdf_sha512_extract=((prk,salt,salt_len,ikm,ikm_len)=>{const pSalt=mput(salt,0,salt_len);const pIkm=mput(ikm,pSalt+salt_len,ikm_len);const pPrk=pIkm+ikm_len;const r=_ecc_kdf_hkdf_sha512_extract(pPrk,pSalt,salt_len,pIkm,ikm_len);mget(pPrk,prk,64);mzero(salt_len+ikm_len+64);return r});Module.ecc_kdf_hkdf_sha512_expand=((okm,prk,info,info_len,len)=>{const pPrk=mput(prk,0,64);const pInfo=mput(info,pPrk+64,info_len);const pOkm=pInfo+info_len;const r=_ecc_kdf_hkdf_sha512_expand(pOkm,pPrk,pInfo,info_len,len);mget(pOkm,okm,len);mzero(64+info_len+len);return r});Module.ecc_ed25519_is_valid_point=(p=>{const pP=mput(p,0,32);const r=_ecc_ed25519_is_valid_point(pP);mzero(32);return r});Module.ecc_ed25519_random=(p=>{const pP=0;_ecc_ed25519_random(pP);mget(pP,p,32);mzero(32)});Module.ecc_ed25519_sign_keypair=((pk,sk)=>{const pPk=0;const pSk=pPk+32;_ecc_ed25519_sign_keypair(pPk,pSk);mget(pPk,pk,32);mget(pSk,sk,64);mzero(32+64)});Module.ecc_ed25519_sign_seed_keypair=((pk,sk,seed)=>{const pSeed=mput(seed,0,32);const pPk=pSeed+32;const pSk=pPk+32;_ecc_ed25519_sign_seed_keypair(pPk,pSk,pSeed);mget(pPk,pk,32);mget(pSk,sk,64);mzero(32+32+64)});Module.ecc_ristretto255_from_hash=((p,r)=>{const pR=mput(r,0,64);const pP=pR+64;_ecc_ristretto255_from_hash(pP,pR);mget(pP,p,32);mzero(64+32)});Module.ecc_ristretto255_scalar_random=(r=>{const pR=0;_ecc_ristretto255_scalar_random(pR);mget(pR,r,32);mzero(32)});Module.ecc_ristretto255_scalar_invert=((recip,s)=>{const pS=mput(s,0,32);const pRecip=pS+32;const r=_ecc_ristretto255_scalar_invert(pRecip,pS);mget(pRecip,recip,32);mzero(32+32);return r});Module.ecc_ristretto255_scalarmult=((q,n,p)=>{const pN=mput(n,0,32);const pP=mput(p,pN+32,32);const pQ=pP+32;const r=_ecc_ristretto255_scalarmult(pQ,pN,pP);mget(pQ,q,32);mzero(32+32+32);return r});Module.ecc_bls12_381_fp_random=(ret=>{const pRet=0;_ecc_bls12_381_fp_random(pRet);mget(pRet,ret,48);mzero(48)});Module.ecc_bls12_381_fp12_mul=((ret,a,b)=>{const pA=mput(a,0,576);const pB=mput(b,pA+576,576);const pRet=pB+576;_ecc_bls12_381_fp12_mul(pRet,pA,pB);mget(pRet,ret,576);mzero(576+576+576)});Module.ecc_bls12_381_fp12_pow=((ret,a,n)=>{const pA=mput(a,0,576);const pRet=pA+576;_ecc_bls12_381_fp12_pow(pRet,pA,n);mget(pRet,ret,576);mzero(576+576)});Module.ecc_bls12_381_fp12_random=(ret=>{const pRet=0;_ecc_bls12_381_fp12_random(pRet);mget(pRet,ret,576);mzero(576)});Module.ecc_bls12_381_g1_scalarmult_base=((q,n)=>{const pN=mput(n,0,32);const pQ=pN+32;_ecc_bls12_381_g1_scalarmult_base(pQ,pN);mget(pQ,q,96);mzero(32+96)});Module.ecc_bls12_381_g2_scalarmult_base=((q,n)=>{const pN=mput(n,0,32);const pQ=pN+32;_ecc_bls12_381_g2_scalarmult_base(pQ,pN);mget(pQ,q,192);mzero(32+192)});Module.ecc_bls12_381_scalar_random=(r=>{const pR=0;_ecc_bls12_381_scalar_random(pR);mget(pR,r,32);mzero(32)});Module.ecc_bls12_381_pairing=((ret,p1_g1,p2_g2)=>{const pP1_g1=mput(p1_g1,0,96);const pP2_g2=mput(p2_g2,pP1_g1+96,192);const pRet=pP2_g2+192;_ecc_bls12_381_pairing(pRet,pP1_g1,pP2_g2);mget(pRet,ret,576);mzero(96+192+576)});Module.ecc_bls12_381_pairing_final_verify=((a,b)=>{const pA=mput(a,0,576);const pB=mput(b,pA+576,576);const r=_ecc_bls12_381_pairing_final_verify(pA,pB);mzero(576+576);return r});Module.ecc_bls12_381_sign_keygen=((sk,ikm,ikm_len)=>{const pIkm=mput(ikm,0,ikm_len);const pSk=pIkm+ikm_len;_ecc_bls12_381_sign_keygen(pSk,pIkm,ikm_len);mget(pSk,sk,32);mzero(ikm_len+32)});Module.ecc_h2c_expand_message_xmd_sha512=((out,msg,msg_len,dst,dst_len,len)=>{const pMsg=mput(msg,0,msg_len);const pDst=mput(dst,pMsg+msg_len,dst_len);const pOut=pDst+dst_len;_ecc_h2c_expand_message_xmd_sha512(pOut,pMsg,msg_len,pDst,dst_len,len);mget(pOut,out,len);mzero(msg_len+dst_len+len)});Module.ecc_oprf_ristretto255_sha512_Evaluate=((evaluatedElement,skS,blindedElement)=>{const pSkS=mput(skS,0,32);const pBlindedElement=mput(blindedElement,pSkS+32,32);const pEvaluatedElement=pBlindedElement+32;_ecc_oprf_ristretto255_sha512_Evaluate(pEvaluatedElement,pSkS,pBlindedElement);mget(pEvaluatedElement,evaluatedElement,32);mzero(32+32+32)});Module.ecc_oprf_ristretto255_sha512_BlindWithScalar=((blindedElement,input,input_len,blind)=>{const pInput=mput(input,0,input_len);const pBlind=mput(blind,pInput+input_len,32);const pBlindedElement=pBlind+32;_ecc_oprf_ristretto255_sha512_BlindWithScalar(pBlindedElement,pInput,input_len,pBlind);mget(pBlindedElement,blindedElement,32);mzero(input_len+32+32)});Module.ecc_oprf_ristretto255_sha512_Blind=((blindedElement,blind,input,input_len)=>{const pInput=mput(input,0,input_len);const pBlindedElement=pInput+input_len;const pBlind=pBlindedElement+32;_ecc_oprf_ristretto255_sha512_Blind(pBlindedElement,pBlind,pInput,input_len);mget(pBlindedElement,blindedElement,32);mget(pBlind,blind,32);mzero(input_len+32+32)});Module.ecc_oprf_ristretto255_sha512_Finalize=((output,input,input_len,blind,evaluatedElement,mode)=>{const pInput=mput(input,0,input_len);const pBlind=mput(blind,pInput+input_len,32);const pEvaluatedElement=mput(evaluatedElement,pBlind+32,32);const pOutput=pEvaluatedElement+32;_ecc_oprf_ristretto255_sha512_Finalize(pOutput,pInput,input_len,pBlind,pEvaluatedElement,mode);mget(pOutput,output,64);mzero(input_len+32+32+64)});Module.ecc_opaque_ristretto255_sha512_GenerateAuthKeyPair=((private_key,public_key)=>{const pPrivate_key=0;const pPublic_key=32;_ecc_opaque_ristretto255_sha512_GenerateAuthKeyPair(pPrivate_key,pPublic_key);mget(pPrivate_key,private_key,32);mget(pPublic_key,public_key,32);mzero(32+32)});Module.ecc_opaque_ristretto255_sha512_CreateRegistrationRequestWithBlind=((request_raw,password,password_len,blind)=>{const pPassword=mput(password,0,password_len);const pBlind=mput(blind,pPassword+password_len,32);const pRequest=pBlind+32;_ecc_opaque_ristretto255_sha512_CreateRegistrationRequestWithBlind(pRequest,pPassword,password_len,pBlind);mget(pRequest,request_raw,32);mget(pBlind,blind,32);mzero(password_len+32+32)});Module.ecc_opaque_ristretto255_sha512_CreateRegistrationRequest=((request_raw,blind,password,password_len)=>{const pPassword=mput(password,0,password_len);const pRequest=pPassword+password_len;const pBlind=pRequest+32;_ecc_opaque_ristretto255_sha512_CreateRegistrationRequest(pRequest,pBlind,pPassword,password_len);mget(pRequest,request_raw,32);mget(pBlind,blind,32);mzero(password_len+32+32)});Module.ecc_opaque_ristretto255_sha512_CreateRegistrationResponse=((response_raw,oprf_key,request_raw,server_public_key,credential_identifier,credential_identifier_len,oprf_seed)=>{const pRequest=mput(request_raw,0,32);const pServer_public_key=mput(server_public_key,pRequest+32,32);const pCredential_identifier=mput(credential_identifier,pServer_public_key+32,credential_identifier_len);const pOprf_seed=mput(oprf_seed,pCredential_identifier+credential_identifier_len,64);const pResponse=pOprf_seed+64;const pOprf_key=pResponse+64;_ecc_opaque_ristretto255_sha512_CreateRegistrationResponse(pResponse,pOprf_key,pRequest,pServer_public_key,pCredential_identifier,credential_identifier_len,pOprf_seed);mget(pResponse,response_raw,64);mget(pOprf_key,oprf_key,32);mzero(32+32+credential_identifier_len+64+64+32)});Module.ecc_opaque_ristretto255_sha512_FinalizeRequest=((record_raw,export_key,client_private_key,password,password_len,blind,response_raw,server_identity,server_identity_len,client_identity,client_identity_len)=>{const pClient_private_key=mput(client_private_key,0,32);const pPassword=mput(password,pClient_private_key+32,password_len);const pBlind=mput(blind,pPassword+password_len,32);const pResponse=mput(response_raw,pBlind+32,64);const pServer_identity=mput(server_identity,pResponse+64,server_identity_len);const pClient_identity=mput(client_identity,pServer_identity+server_identity_len,client_identity_len);const pRecord=pClient_identity+client_identity_len;const pExport_key=pRecord+192;_ecc_opaque_ristretto255_sha512_FinalizeRequest(pRecord,pExport_key,pClient_private_key,pPassword,password_len,pBlind,pResponse,pServer_identity,server_identity_len,pClient_identity,client_identity_len);mget(pRecord,record_raw,192);mget(pExport_key,export_key,64);mzero(32+password_len+32+64+server_identity_len+client_identity_len+192+64)});Module.ecc_opaque_ristretto255_sha512_3DH_ClientInit=((ke1_raw,state_raw,client_identity,client_identity_len,password,password_len)=>{const pSate=mput(state_raw,0,160);const pClient_identity=mput(client_identity,pSate+160,client_identity_len);const pPassword=mput(password,pClient_identity+client_identity_len,password_len);const pKe1=pPassword+password_len;_ecc_opaque_ristretto255_sha512_3DH_ClientInit(pKe1,pSate,pClient_identity,client_identity_len,pPassword,password_len);mget(pSate,state_raw,160);mget(pKe1,ke1_raw,96);mzero(160+client_identity_len+password_len+96)});Module.ecc_opaque_ristretto255_sha512_3DH_ClientFinish=((ke3_raw,session_key,export_key,state_raw,password,password_len,client_identity,client_identity_len,server_identity,server_identity_len,ke2_raw)=>{const pSate=mput(state_raw,0,160);const pPassword=mput(password,pSate+160,password_len);const pClient_identity=mput(client_identity,pPassword+password_len,client_identity_len);const pServer_identity=mput(server_identity,pClient_identity+client_identity_len,server_identity_len);const pKe2=mput(ke2_raw,pServer_identity+server_identity_len,320);const pKe3=pKe2+320;const pSession_key=pKe3+64;const pExport_key=pSession_key+64;const r=_ecc_opaque_ristretto255_sha512_3DH_ClientFinish(pKe3,pSession_key,pExport_key,pSate,pPassword,password_len,pClient_identity,client_identity_len,pServer_identity,server_identity_len,pKe2);mget(pSate,state_raw,160);mget(pKe3,ke3_raw,64);mget(pSession_key,session_key,64);mget(pExport_key,export_key,64);mzero(160+password_len+client_identity_len+server_identity_len+320+64+64+64);return r});Module.ecc_opaque_ristretto255_sha512_3DH_ServerInit=((ke2_raw,state_raw,server_identity,server_identity_len,server_private_key,server_public_key,record_raw,credential_identifier,credential_identifier_len,oprf_seed,ke1_raw,context,context_len)=>{const pSate=mput(state_raw,0,128);const pServer_identity=mput(server_identity,pSate+128,server_identity_len);const pServer_private_key=mput(server_private_key,pServer_identity+server_identity_len,32);const pServer_public_key=mput(server_public_key,pServer_private_key+32,32);const pRecord=mput(record_raw,pServer_public_key+32,192);const pCredential_identifier=mput(credential_identifier,pRecord+192,credential_identifier_len);const pOprf_seed=mput(oprf_seed,pCredential_identifier+credential_identifier_len,64);const pKe1=mput(ke1_raw,pOprf_seed+64,96);const pContext=mput(context,pKe1+96,context_len);const pKe2=pContext+context_len;_ecc_opaque_ristretto255_sha512_3DH_ServerInit(pKe2,pSate,pServer_identity,server_identity_len,pServer_private_key,pServer_public_key,pRecord,pCredential_identifier,credential_identifier_len,pOprf_seed,pKe1,pContext,context_len);mget(pSate,state_raw,128);mget(pKe2,ke2_raw,320);mzero(128+server_identity_len+32+32+192+credential_identifier_len+64+96+context_len+320)});Module.ecc_opaque_ristretto255_sha512_3DH_ServerFinish=((session_key,state_raw,ke3_raw)=>{const pSate=mput(state_raw,0,128);const pKe3=mput(ke3_raw,pSate+128,64);const pSession_key=pKe3+64;const r=_ecc_opaque_ristretto255_sha512_3DH_ServerFinish(pSession_key,pSate,pKe3);mget(pSate,state_raw,128);mget(pSession_key,session_key,64);mzero(128+64+64);return r});const ecc_pre_schema1_MESSAGESIZE=576;Module.ecc_pre_schema1_MESSAGESIZE=ecc_pre_schema1_MESSAGESIZE;const ecc_pre_schema1_PUBLICKEYSIZE=96;Module.ecc_pre_schema1_PUBLICKEYSIZE=ecc_pre_schema1_PUBLICKEYSIZE;const ecc_pre_schema1_PRIVATEKEYSIZE=32;Module.ecc_pre_schema1_PRIVATEKEYSIZE=ecc_pre_schema1_PRIVATEKEYSIZE;const ecc_pre_schema1_SIGNINGPUBLICKEYSIZE=32;Module.ecc_pre_schema1_SIGNINGPUBLICKEYSIZE=ecc_pre_schema1_SIGNINGPUBLICKEYSIZE;const ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE=64;Module.ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE=ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE;const ecc_pre_schema1_SIGNATURESIZE=64;Module.ecc_pre_schema1_SIGNATURESIZE=ecc_pre_schema1_SIGNATURESIZE;const ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE=800;Module.ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE=ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE;const ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE=2240;Module.ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE=ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE;const ecc_pre_schema1_REKEYSIZE=960;Module.ecc_pre_schema1_REKEYSIZE=ecc_pre_schema1_REKEYSIZE;Module.ecc_pre_schema1_MessageGen=(m=>{const pM=0;_ecc_pre_schema1_MessageGen(pM);mget(pM,m,ecc_pre_schema1_MESSAGESIZE);mzero(ecc_pre_schema1_MESSAGESIZE)});Module.ecc_pre_schema1_KeyGen=((pk,sk)=>{const pPk=0;const pSk=pPk+ecc_pre_schema1_PUBLICKEYSIZE;_ecc_pre_schema1_KeyGen(pPk,pSk);mget(pPk,pk,ecc_pre_schema1_PUBLICKEYSIZE);mget(pSk,sk,ecc_pre_schema1_PRIVATEKEYSIZE);mzero(ecc_pre_schema1_PUBLICKEYSIZE+ecc_pre_schema1_PRIVATEKEYSIZE)});Module.ecc_pre_schema1_SigningKeyGen=((spk,ssk)=>{const pSpk=0;const pSsk=pSpk+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE;_ecc_pre_schema1_SigningKeyGen(pSpk,pSsk);mget(pSpk,spk,ecc_pre_schema1_SIGNINGPUBLICKEYSIZE);mget(pSsk,ssk,ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE);mzero(ecc_pre_schema1_SIGNINGPUBLICKEYSIZE+ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE)});Module.ecc_pre_schema1_Encrypt=((C_j_raw,m,pk_j,spk_i,ssk_i)=>{const pM=mput(m,0,ecc_pre_schema1_MESSAGESIZE);const pPk_j=mput(pk_j,pM+ecc_pre_schema1_MESSAGESIZE,ecc_pre_schema1_PUBLICKEYSIZE);const pSpk_i=mput(spk_i,pPk_j+ecc_pre_schema1_PUBLICKEYSIZE,ecc_pre_schema1_SIGNINGPUBLICKEYSIZE);const pSsk_i=mput(ssk_i,pSpk_i+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE,ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE);const pC_j_raw=pSsk_i+ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE;_ecc_pre_schema1_Encrypt(pC_j_raw,pM,pPk_j,pSpk_i,pSsk_i);mget(pC_j_raw,C_j_raw,ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE);mzero(ecc_pre_schema1_MESSAGESIZE+ecc_pre_schema1_PUBLICKEYSIZE+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE+ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE+ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE)});Module.ecc_pre_schema1_ReKeyGen=((tk_i_j_raw,sk_i,pk_j,spk_i,ssk_i)=>{const pSk_i=mput(sk_i,0,ecc_pre_schema1_PRIVATEKEYSIZE);const pPk_j=mput(pk_j,pSk_i+ecc_pre_schema1_PRIVATEKEYSIZE,ecc_pre_schema1_PUBLICKEYSIZE);const pSpk_i=mput(spk_i,pPk_j+ecc_pre_schema1_PUBLICKEYSIZE,ecc_pre_schema1_SIGNINGPUBLICKEYSIZE);const pSsk_i=mput(ssk_i,pSpk_i+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE,ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE);const pTk_i_j_raw=pSsk_i+ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE;_ecc_pre_schema1_ReKeyGen(pTk_i_j_raw,pSk_i,pPk_j,pSpk_i,pSsk_i);mget(pTk_i_j_raw,tk_i_j_raw,ecc_pre_schema1_REKEYSIZE);mzero(ecc_pre_schema1_PRIVATEKEYSIZE+ecc_pre_schema1_PUBLICKEYSIZE+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE+ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE+ecc_pre_schema1_REKEYSIZE)});Module.ecc_pre_schema1_ReEncrypt=((C_j_raw,C_i_raw,tk_i_j_raw,spk_i,pk_j,spk,ssk)=>{const heap_size=ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE+ecc_pre_schema1_REKEYSIZE+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE+ecc_pre_schema1_PUBLICKEYSIZE+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE+ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE+ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE;const heap=_ecc_malloc(heap_size);const pC_i_raw=mput(C_i_raw,heap,ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE);const pTk_i_j_raw=mput(tk_i_j_raw,pC_i_raw+ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE,ecc_pre_schema1_REKEYSIZE);const pSpk_i=mput(spk_i,pTk_i_j_raw+ecc_pre_schema1_REKEYSIZE,ecc_pre_schema1_SIGNINGPUBLICKEYSIZE);const pPk_j=mput(pk_j,pSpk_i+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE,ecc_pre_schema1_PUBLICKEYSIZE);const pSpk=mput(spk,pPk_j+ecc_pre_schema1_PUBLICKEYSIZE,ecc_pre_schema1_SIGNINGPUBLICKEYSIZE);const pSsk=mput(ssk,pSpk+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE,ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE);const pC_j_raw=pSsk+ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE;const r=_ecc_pre_schema1_ReEncrypt(pC_j_raw,pC_i_raw,pTk_i_j_raw,pSpk_i,pPk_j,pSpk,pSsk);mget(pC_j_raw,C_j_raw,ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE);_ecc_free(heap,heap_size);return r});Module.ecc_pre_schema1_DecryptLevel1=((m,C_i_raw,sk_i,spk_i)=>{const heap_size=ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE+ecc_pre_schema1_PRIVATEKEYSIZE+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE+ecc_pre_schema1_MESSAGESIZE;const heap=_ecc_malloc(heap_size);const pC_i_raw=mput(C_i_raw,heap,ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE);const pSk_i=mput(sk_i,pC_i_raw+ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE,ecc_pre_schema1_PRIVATEKEYSIZE);const pSpk_i=mput(spk_i,pSk_i+ecc_pre_schema1_PRIVATEKEYSIZE,ecc_pre_schema1_SIGNINGPUBLICKEYSIZE);const pM=pSpk_i+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE;const r=_ecc_pre_schema1_DecryptLevel1(pM,pC_i_raw,pSk_i,pSpk_i);mget(pM,m,ecc_pre_schema1_MESSAGESIZE);_ecc_free(heap,heap_size);return r});Module.ecc_pre_schema1_DecryptLevel2=((m,C_j_raw,sk_j,spk)=>{const heap_size=ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE+ecc_pre_schema1_PRIVATEKEYSIZE+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE+ecc_pre_schema1_MESSAGESIZE;const heap=_ecc_malloc(heap_size);const pC_j_raw=mput(C_j_raw,heap,ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE);const pSk_j=mput(sk_j,pC_j_raw+ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE,ecc_pre_schema1_PRIVATEKEYSIZE);const pSpk=mput(spk,pSk_j+ecc_pre_schema1_PRIVATEKEYSIZE,ecc_pre_schema1_SIGNINGPUBLICKEYSIZE);const pM=pSpk+ecc_pre_schema1_SIGNINGPUBLICKEYSIZE;const r=_ecc_pre_schema1_DecryptLevel2(pM,pC_j_raw,pSk_j,pSpk);mget(pM,m,ecc_pre_schema1_MESSAGESIZE);_ecc_free(heap,heap_size);return r});


  return libecc_module.ready
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (libecc_module);

/***/ }),

/***/ 947:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opaque_ristretto255_sha512_GenerateAuthKeyPair": () => (/* binding */ opaque_ristretto255_sha512_GenerateAuthKeyPair),
/* harmony export */   "opaque_ristretto255_sha512_CreateRegistrationRequest": () => (/* binding */ opaque_ristretto255_sha512_CreateRegistrationRequest),
/* harmony export */   "opaque_ristretto255_sha512_CreateRegistrationResponse": () => (/* binding */ opaque_ristretto255_sha512_CreateRegistrationResponse),
/* harmony export */   "opaque_ristretto255_sha512_FinalizeRequest": () => (/* binding */ opaque_ristretto255_sha512_FinalizeRequest),
/* harmony export */   "opaque_ristretto255_sha512_3DH_ClientInit": () => (/* binding */ opaque_ristretto255_sha512_3DH_ClientInit),
/* harmony export */   "opaque_ristretto255_sha512_3DH_ClientFinish": () => (/* binding */ opaque_ristretto255_sha512_3DH_ClientFinish),
/* harmony export */   "opaque_ristretto255_sha512_3DH_ServerInit": () => (/* binding */ opaque_ristretto255_sha512_3DH_ServerInit),
/* harmony export */   "opaque_ristretto255_sha512_3DH_ServerFinish": () => (/* binding */ opaque_ristretto255_sha512_3DH_ServerFinish)
/* harmony export */ });
/* harmony import */ var _libecc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(164);
/*
 * Copyright (c) 2021, Alden Torres
 *
 * Licensed under the terms of the MIT license.
 * Copy of the license at https://opensource.org/licenses/MIT
 */



/**
 * Returns a randomly generated private and public key pair.
 *
 * This is implemented by generating a random "seed", then
 * calling internally DeriveAuthKeyPair.
 *
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-opaque-05#section-2
 *
 * @return object {private_key, public_key}
 */
async function opaque_ristretto255_sha512_GenerateAuthKeyPair() {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let private_key = new Uint8Array(32);
    let public_key = new Uint8Array(32);

    await libecc.ecc_opaque_ristretto255_sha512_GenerateAuthKeyPair(
        private_key,
        public_key,
    );

    return {
        private_key: private_key,
        public_key: public_key,
    };
}

/**
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-opaque-05#section-5.1.1.1
 *
 * @param {Uint8Array} password an opaque byte string containing the client's password
 * @return object {request, blind}
 */
async function opaque_ristretto255_sha512_CreateRegistrationRequest(
    password
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let request_raw = new Uint8Array(32);
    let blind = new Uint8Array(32);

    await libecc.ecc_opaque_ristretto255_sha512_CreateRegistrationRequest(
        request_raw,
        blind,
        password, password.length
    );

    return {
        request: request_raw,
        blind: blind,
    };
}

/**
 * In order to make this method not to use dynamic memory allocation, there is a
 * limit of credential_identifier to length <= 200.
 *
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-opaque-05#section-5.1.1.2
 *
 * @param {Uint8Array} request_raw a RegistrationRequest structure
 * @param {Uint8Array} server_public_key the server's public key
 * @param {Uint8Array} credential_identifier an identifier that uniquely represents the credential being registered
 * @param {Uint8Array} oprf_seed the server-side seed of Nh bytes used to generate an oprf_key
 * @return object {response, oprf_key}
 */
async function opaque_ristretto255_sha512_CreateRegistrationResponse(
    request_raw,
    server_public_key,
    credential_identifier,
    oprf_seed,
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let response_raw = new Uint8Array(64);
    let oprf_key = new Uint8Array(32);

    await libecc.ecc_opaque_ristretto255_sha512_CreateRegistrationResponse(
        response_raw,
        oprf_key,
        request_raw,
        server_public_key,
        credential_identifier, credential_identifier.length,
        oprf_seed,
    );

    return {
        response: response_raw,
        oprf_key: oprf_key,
    };
}

/**
 * To create the user record used for further authentication, the client
 * executes the following function. Since this works in the internal key mode, the
 * "client_private_key" is null.
 *
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-opaque-05#section-5.1.1.3
 *
 * @param {Uint8Array} client_private_key the client's private key (always null, internal mode)
 * @param {Uint8Array} password an opaque byte string containing the client's password
 * @param {Uint8Array} blind the OPRF scalar value used for blinding
 * @param {Uint8Array} response_raw a RegistrationResponse structure
 * @param {Uint8Array} server_identity the optional encoded server identity
 * @param {Uint8Array} client_identity the optional encoded client identity
 * @return object {record, export_key}
 */
async function opaque_ristretto255_sha512_FinalizeRequest(
    client_private_key,
    password,
    blind,
    response_raw,
    server_identity,
    client_identity,
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    client_private_key = client_private_key || new Uint8Array(0);
    server_identity = server_identity || new Uint8Array(0);
    client_identity = client_identity || new Uint8Array(0);

    let record_raw = new Uint8Array(192);
    let export_key = new Uint8Array(64);

    await libecc.ecc_opaque_ristretto255_sha512_FinalizeRequest(
        record_raw,
        export_key,
        client_private_key,
        password, password.length,
        blind,
        response_raw,
        server_identity, server_identity.length,
        client_identity, client_identity.length,
    );

    return {
        record: record_raw,
        export_key: export_key,
    };
}

/**
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-opaque-05#section-6.2.3
 *
 * @param {Uint8Array} state_raw a ClientState structure
 * @param {Uint8Array} client_identity the optional encoded client identity, which is null if not specified
 * @param {Uint8Array} password an opaque byte string containing the client's password
 * @return {Promise<Uint8Array>} a KE1 message structure
 */
async function opaque_ristretto255_sha512_3DH_ClientInit(
    state_raw,
    client_identity,
    password,
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    client_identity = client_identity || new Uint8Array(0);

    let ke1_raw = new Uint8Array(96);

    await libecc.ecc_opaque_ristretto255_sha512_3DH_ClientInit(
        ke1_raw,
        state_raw,
        client_identity, client_identity.length,
        password, password.length,
    );

    return ke1_raw;
}

/**
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-opaque-05#section-6.2.3
 *
 * @param {Uint8Array} state_raw a ClientState structure
 * @param {Uint8Array} password an opaque byte string containing the client's password
 * @param {Uint8Array} client_identity the optional encoded client identity, which is set
 * to client_public_key if not specified
 * @param {Uint8Array} server_identity the optional encoded server identity, which is set
 * to server_public_key if not specified
 * @param {Uint8Array} ke2_raw a KE2 message structure
 * @return object {ke3, session_key, export_key, finish_ret}
 */
async function opaque_ristretto255_sha512_3DH_ClientFinish(
    state_raw,
    password,
    client_identity,
    server_identity,
    ke2_raw,
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    client_identity = client_identity || new Uint8Array(0);
    server_identity = server_identity || new Uint8Array(0);

    let ke3_raw = new Uint8Array(64);
    let session_key = new Uint8Array(64);
    let export_key = new Uint8Array(64);

    const ret = await libecc.ecc_opaque_ristretto255_sha512_3DH_ClientFinish(
        ke3_raw,
        session_key,
        export_key,
        state_raw,
        password, password.length,
        client_identity, client_identity.length,
        server_identity, server_identity.length,
        ke2_raw,
    );

    return {
        ke3: ke3_raw,
        session_key: session_key,
        export_key: export_key,
        finish_ret: ret,
    };
}

/**
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-opaque-05#section-6.2.4
 *
 * @param {Uint8Array} state_raw a ServerState structure
 * @param {Uint8Array} server_identity the optional encoded server identity, which is set to
 * server_public_key if null
 * @param {Uint8Array} server_private_key the server's private key
 * @param {Uint8Array} server_public_key the server's public key
 * @param {Uint8Array} record_raw the client's RegistrationUpload structure
 * @param {Uint8Array} credential_identifier an identifier that uniquely represents the credential
 * being registered
 * @param {Uint8Array} oprf_seed the server-side seed of Nh bytes used to generate an oprf_key
 * @param {Uint8Array} ke1_raw a KE1 message structure
 * @param {Uint8Array} context the application specific context
 * @return {Promise<Uint8Array>} a KE2 structure
 */
async function opaque_ristretto255_sha512_3DH_ServerInit(
    state_raw,
    server_identity,
    server_private_key,
    server_public_key,
    record_raw,
    credential_identifier,
    oprf_seed,
    ke1_raw,
    context,
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    server_identity = server_identity || new Uint8Array(0);
    context = context || new Uint8Array(0);

    let ke2_raw = new Uint8Array(320);

    await libecc.ecc_opaque_ristretto255_sha512_3DH_ServerInit(
        ke2_raw,
        state_raw,
        server_identity, server_identity.length,
        server_private_key,
        server_public_key,
        record_raw,
        credential_identifier, credential_identifier.length,
        oprf_seed,
        ke1_raw,
        context, context.length,
    );

    return ke2_raw;
}

/**
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-opaque-05#section-6.2.4
 *
 * @param {Uint8Array} state_raw a ServerState structure
 * @param {Uint8Array} ke3_raw a KE3 structure
 * @return object {session_key, finish_ret}
 */
async function opaque_ristretto255_sha512_3DH_ServerFinish(
    state_raw,
    ke3_raw
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let session_key = new Uint8Array(64);

    const ret = await libecc.ecc_opaque_ristretto255_sha512_3DH_ServerFinish(
        session_key,
        state_raw,
        ke3_raw,
    );

    return {
        session_key: session_key,
        finish_ret: ret,
    };
}


/***/ }),

/***/ 238:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "oprf_ristretto255_sha512_Evaluate": () => (/* binding */ oprf_ristretto255_sha512_Evaluate),
/* harmony export */   "oprf_ristretto255_sha512_BlindWithScalar": () => (/* binding */ oprf_ristretto255_sha512_BlindWithScalar),
/* harmony export */   "oprf_ristretto255_sha512_Blind": () => (/* binding */ oprf_ristretto255_sha512_Blind),
/* harmony export */   "oprf_ristretto255_sha512_Finalize": () => (/* binding */ oprf_ristretto255_sha512_Finalize)
/* harmony export */ });
/* harmony import */ var _libecc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(164);
/*
 * Copyright (c) 2021, Alden Torres
 *
 * Licensed under the terms of the MIT license.
 * Copy of the license at https://opensource.org/licenses/MIT
 */



/**
 * Evaluates serialized representations of blinded group elements from the
 * client as inputs.
 *
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-voprf-07#section-3.3.1.1
 *
 * @param {Uint8Array} skS private key
 * @param {Uint8Array} blindedElement blinded element
 * @return {Promise<Uint8Array>} evaluated element
 */
async function oprf_ristretto255_sha512_Evaluate(skS, blindedElement) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let evaluatedElement = new Uint8Array(32);
    libecc.ecc_oprf_ristretto255_sha512_Evaluate(evaluatedElement, skS, blindedElement);

    return evaluatedElement;
}

/**
 * Same as calling `oprf_ristretto255_sha512_Blind` with an
 * specified scalar blind.
 *
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-voprf-07#section-3.3.3.1
 *
 * @param {Uint8Array} input message to blind
 * @param {Uint8Array} blind scalar to use in the blind operation
 * @return {Uint8Array} blinded element
 */
async function oprf_ristretto255_sha512_BlindWithScalar(input, blind) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let blindedElement = new Uint8Array(32);

    await libecc.ecc_oprf_ristretto255_sha512_BlindWithScalar(
        blindedElement,
        input, input.length,
        blind,
    );

    return blindedElement;
}

/**
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-voprf-07#section-3.3.3.1
 *
 * @param {Uint8Array} input message to blind
 * @return object {blind, blindedElement}
 */
async function oprf_ristretto255_sha512_Blind(input) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let blindedElement = new Uint8Array(32);
    let blind = new Uint8Array(32);

    await libecc.ecc_oprf_ristretto255_sha512_BlindWithScalar(
        blindedElement,
        blind,
        input, input.length,
    );

    return {blind: blind, blindedElement: blindedElement};
}

/**
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-voprf-07#section-3.3.3.2
 *
 * @param input the input message
 * @param blind
 * @param evaluatedElement
 */
async function oprf_ristretto255_sha512_Finalize(input, blind, evaluatedElement) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let output = new Uint8Array(64);
    libecc.ecc_oprf_ristretto255_sha512_Finalize(
        output,
        input, input.length,
        blind,
        evaluatedElement,
        0x00
    );

    return output;
}


/***/ }),

/***/ 825:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pre_schema1_MessageGen": () => (/* binding */ pre_schema1_MessageGen),
/* harmony export */   "pre_schema1_KeyGen": () => (/* binding */ pre_schema1_KeyGen),
/* harmony export */   "pre_schema1_SigningKeyGen": () => (/* binding */ pre_schema1_SigningKeyGen),
/* harmony export */   "pre_schema1_Encrypt": () => (/* binding */ pre_schema1_Encrypt),
/* harmony export */   "pre_schema1_ReKeyGen": () => (/* binding */ pre_schema1_ReKeyGen),
/* harmony export */   "pre_schema1_ReEncrypt": () => (/* binding */ pre_schema1_ReEncrypt),
/* harmony export */   "pre_schema1_DecryptLevel1": () => (/* binding */ pre_schema1_DecryptLevel1),
/* harmony export */   "pre_schema1_DecryptLevel2": () => (/* binding */ pre_schema1_DecryptLevel2)
/* harmony export */ });
/* harmony import */ var _libecc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(164);
/*
 * Copyright (c) 2021, Alden Torres
 *
 * Licensed under the terms of the MIT license.
 * Copy of the license at https://opensource.org/licenses/MIT
 */



/**
 * Generates a random message suitable to use in the protocol.
 *
 * The output can be used in other key derivation algorithms for other
 * symmetric encryption protocols.
 *
 * @return {Uint8Array} a random plaintext message
 */
async function pre_schema1_MessageGen() {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let m = new Uint8Array(libecc.ecc_pre_schema1_MESSAGESIZE);
    await libecc.ecc_pre_schema1_MessageGen(m);
    return m;
}

/**
 * Generate a public/private key pair.
 *
 * @return {object} a random public/private key pair
 */
async function pre_schema1_KeyGen() {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let pk = new Uint8Array(libecc.ecc_pre_schema1_PUBLICKEYSIZE);
    let sk = new Uint8Array(libecc.ecc_pre_schema1_PRIVATEKEYSIZE);
    await libecc.ecc_pre_schema1_KeyGen(pk, sk);
    return {pk: pk, sk: sk};
}

/**
 * Generate a signing public/private key pair.
 *
 * @return {object} a random signing public/private key pair
 */
async function pre_schema1_SigningKeyGen() {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let spk = new Uint8Array(libecc.ecc_pre_schema1_SIGNINGPUBLICKEYSIZE);
    let ssk = new Uint8Array(libecc.ecc_pre_schema1_SIGNINGPRIVATEKEYSIZE);
    await libecc.ecc_pre_schema1_SigningKeyGen(spk, ssk);
    return {spk: spk, ssk: ssk};
}

/**
 * Encrypt a message `m` to delegatee j, given j’s public key (pk_j) and the
 * sender i’s signing key pair (signing_i). Produces a ciphertext C_j.
 *
 * This is also called encryption of level 1, since it's used to encrypt to
 * itself (i.e j == i), in order to have later the ciphertext re-encrypted
 * by the proxy with the re-encryption key (level 2).
 *
 * @param {Uint8Array} m         the plaintext message
 * @param {Uint8Array} pk_j      delegatee's public key
 * @param {object} signing_i sender signing public/private key
 * @return a CiphertextLevel1_t structure
 */
async function pre_schema1_Encrypt(
    m,
    pk_j,
    signing_i
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let C_j_raw = new Uint8Array(libecc.ecc_pre_schema1_CIPHERTEXTLEVEL1SIZE);
    await libecc.ecc_pre_schema1_Encrypt(
        C_j_raw,
        m,
        pk_j,
        signing_i.spk,
        signing_i.ssk
    );
    return C_j_raw;
}

/**
 * Generate a re-encryption key from user i (the delegator) to user j (the delegatee).
 *
 * Requires the delegator’s private key (sk_i), the delegatee’s public key (pk_j), and
 * the delegator’s signing key pair (signing_i).
 *
 * @param {Uint8Array} sk_i      delegator’s private key
 * @param {Uint8Array} pk_j      delegatee’s public key
 * @param {object} signing_i delegator’s signing public/private key
 * @return a ReKey_t structure
 */
async function pre_schema1_ReKeyGen(
    sk_i,
    pk_j,
    signing_i
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let tk_i_j_raw = new Uint8Array(libecc.ecc_pre_schema1_REKEYSIZE);
    await libecc.ecc_pre_schema1_ReKeyGen(
        tk_i_j_raw,
        sk_i,
        pk_j,
        signing_i.spk,
        signing_i.ssk
    );
    return tk_i_j_raw;
}

/**
 * Re-encrypt a ciphertext encrypted to i (C_i) into a ciphertext encrypted
 * to j (C_j), given a re-encryption key (tk_i_j) and the proxy’s signing key
 * pair (spk, ssk).
 *
 * This operation is performed by the proxy and is also called encryption of
 * level 2, since it takes a ciphertext from a level 1 and re-encrypt it.
 *
 * It also validate the signature on the encrypted ciphertext and re-encryption key.
 *
 * @param {Uint8Array} C_i_raw    a CiphertextLevel1_t structure
 * @param {Uint8Array} tk_i_j_raw a ReKey_t structure
 * @param {Uint8Array} spk_i      delegator’s signing public key
 * @param {Uint8Array} pk_j       delegatee’s public key
 * @param {object} signing    proxy’s signing public/private key
 * @return {Uint8Array} a CiphertextLevel2_t structure if all the signatures are
 * valid, null if there is an error
 */
async function pre_schema1_ReEncrypt(
    C_i_raw,
    tk_i_j_raw,
    spk_i,
    pk_j,
    signing
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let C_j_raw = new Uint8Array(libecc.ecc_pre_schema1_CIPHERTEXTLEVEL2SIZE);
    const r = await libecc.ecc_pre_schema1_ReEncrypt(
        C_j_raw,
        C_i_raw,
        tk_i_j_raw,
        spk_i,
        pk_j,
        signing.spk,
        signing.ssk
    );
    return r === 0 ? C_j_raw : null;
}

/**
 * Decrypt a signed ciphertext (C_i) given the private key of the recipient
 * i (sk_i). Returns the original message that was encrypted, m.
 *
 * This operations is usually performed by the delegator, since it encrypted
 * the message just to be stored and later be re-encrypted by the proxy.
 *
 * It also validate the signature on the encrypted ciphertext.
 *
 * @param {Uint8Array} C_i_raw a CiphertextLevel1_t structure
 * @param {Uint8Array} sk_i    recipient private key
 * @param {Uint8Array} spk_i   recipient signing public key
 * @return {Uint8Array} the original plaintext message if all the signatures are
 * valid, null if there is an error
 */
async function pre_schema1_DecryptLevel1(
    C_i_raw,
    sk_i,
    spk_i
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let m = new Uint8Array(libecc.ecc_pre_schema1_MESSAGESIZE);
    const r = await libecc.ecc_pre_schema1_DecryptLevel1(
        m,
        C_i_raw,
        sk_i,
        spk_i
    );
    return r === 0 ? m : null;
}

/**
 * Decrypt a signed ciphertext (C_j) given the private key of the recipient
 * j (sk_j). Returns the original message that was encrypted, m.
 *
 * This operations is usually performed by the delegatee, since it is the proxy
 * that re-encrypt the message and send the ciphertext to the final recipient.
 *
 * It also validate the signature on the encrypted ciphertext.
 *
 * @param {Uint8Array} C_j_raw a CiphertextLevel2_t structure
 * @param {Uint8Array} sk_j    recipient private key
 * @param {Uint8Array} spk     proxy’s signing public key
 * @return {Uint8Array} the original plaintext message if all the signatures are
 * valid, null if there is an error
 */
async function pre_schema1_DecryptLevel2(
    C_j_raw,
    sk_j,
    spk
) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    let m = new Uint8Array(libecc.ecc_pre_schema1_MESSAGESIZE);
    const r = await libecc.ecc_pre_schema1_DecryptLevel2(
        m,
        C_j_raw,
        sk_j,
        spk
    );
    return r === 0 ? m : null;
}


/***/ }),

/***/ 980:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "str2bin": () => (/* binding */ str2bin),
/* harmony export */   "bin2hex": () => (/* binding */ bin2hex),
/* harmony export */   "hex2bin": () => (/* binding */ hex2bin),
/* harmony export */   "len": () => (/* binding */ len),
/* harmony export */   "concat": () => (/* binding */ concat),
/* harmony export */   "I2OSP": () => (/* binding */ I2OSP),
/* harmony export */   "OS2IP": () => (/* binding */ OS2IP),
/* harmony export */   "strxor": () => (/* binding */ strxor),
/* harmony export */   "randombytes": () => (/* binding */ randombytes)
/* harmony export */ });
/* harmony import */ var _libecc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(164);
/*
 * Copyright (c) 2021, Alden Torres
 *
 * Licensed under the terms of the MIT license.
 * Copy of the license at https://opensource.org/licenses/MIT
 */



/**
 * Converts a string into a byte array using UTF-8 encoding.
 *
 * @param {string} s the input string
 * @return {Uint8Array} the UTF-8 encoding bytes
 */
function str2bin(s) {
    const encoder = new TextEncoder();
    return encoder.encode(s);
}

/**
 * Converts a byte array to the hex string.
 *
 * @param {Uint8Array} bin the input byte array
 * @return {string} the hex encoded string
 */
function bin2hex(bin) {
    return bin.reduce((s, b) => s + b.toString(16).padStart(2, '0'), '');
}

/**
 * Converts an hex string to a byte array.
 *
 * @param {string} hex the input hex string
 * @return {Uint8Array} the byte array
 */
function hex2bin(hex) {
    if (hex.length === 0)
        return new Uint8Array(0);
    return new Uint8Array(hex.match(/.{1,2}/g).map(b => parseInt(b, 16)));
}

/**
 * Converts an hex string to a byte array.
 *
 * @param {Uint8Array} buf
 * @returns {number}
 */
function len(buf) {
    return buf.length;
}

/**
 * Concatenates two byte arrays. Sames as a || b.
 *
 * a || b: denotes the concatenation of byte strings a and b. For
 * example, "ABC" || "DEF" == "ABCDEF".
 *
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-4
 *
 * @param {Uint8Array} a
 * @param {Uint8Array} b
 * @returns {Uint8Array}
 */
function concat(a, b) {
    let buf = new Uint8Array(a.length + b.length);
    buf.set(a);
    buf.set(b, a.length);
    return buf;
}

// https://datatracker.ietf.org/doc/html/rfc8017

/**
 * I2OSP - Integer-to-Octet-String primitive.
 *
 * I2OSP converts a nonnegative integer to an octet string of a
 * specified length.
 * See https://datatracker.ietf.org/doc/html/rfc8017#section-4.1
 *
 * @param {number} x nonnegative integer to be converted
 * @param {number} xLen intended length of the resulting octet string
 * @returns {Uint8Array} corresponding octet string of length xLen
 */
function I2OSP(x, xLen) {
    if (x < 0) throw "Integer must be positive";
    if (x >= 256 ** xLen) throw "Integer too large";

    let buf = new Uint8Array(xLen);
    for (let i = xLen - 1; i >= 0; i--) {
        buf[i] = x & 0xff;
        x = x >>> 8;
    }

    return buf;
}

/**
 * OS2IP - Octet-String-to-Integer primitive.
 *
 * OS2IP converts an octet string to a nonnegative integer.
 * See https://datatracker.ietf.org/doc/html/rfc8017#section-4.2
 *
 * @param {Uint8Array} X octet string to be converted
 * @returns {number} corresponding nonnegative integer
 */
function OS2IP(X) {
    if (X.length > 4) throw "Invalid input length";

    let r = 0;
    for (let i = 0; i < X.length; i++) {
        r |= (X[i] & 0xff) << (8 * (X.length - 1 - i));
    }

    return r;
}

// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11

/**
 * For byte strings str1 and str2, strxor(str1, str2) returns
 * the bitwise XOR of the two strings. For example,
 * strxor("abc", "XYZ") == "9;9" (the strings in this example are
 * ASCII literals, but strxor is defined for arbitrary byte strings).
 *
 * strxor is only applied to inputs of equal length.
 *
 * See https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-4
 *
 * @param {Uint8Array} str1
 * @param {Uint8Array} str2
 */
function strxor(str1, str2) {
    if (str1.length !== str2.length) throw "Inputs should be of equal length";

    const len = str1.length;
    let buf = new Uint8Array(len);
    for (let i = 0; i < len; i++) {
        buf[i] = str1[i] ^ str2[i];
    }

    return buf;
}

/**
 * Returns a buffer of length `n` with an unpredictable sequence of bytes.
 *
 * @param {number} n the length of the buffer to return
 * @return {Promise<Uint8Array>} the buffer with random elements
 */
async function randombytes(n) {
    const libecc = await (0,_libecc_js__WEBPACK_IMPORTED_MODULE_0__.default)();

    const buf = new Uint8Array(n);
    await libecc.ecc_randombytes(buf, n);

    return buf;
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".ecc.dev.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "ecc:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			179: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkecc"] = self["webpackChunkecc"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "libecc_module": () => (/* binding */ libecc_module)
/* harmony export */ });
/* harmony import */ var _libecc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(164);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(980);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _util_js__WEBPACK_IMPORTED_MODULE_1__) if(["default","libecc_module"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _util_js__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _oprf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(238);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _oprf_js__WEBPACK_IMPORTED_MODULE_2__) if(["default","libecc_module"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _oprf_js__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _opaque_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(947);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _opaque_js__WEBPACK_IMPORTED_MODULE_3__) if(["default","libecc_module"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _opaque_js__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _pre_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(825);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _pre_js__WEBPACK_IMPORTED_MODULE_4__) if(["default","libecc_module"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _pre_js__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/*
 * Copyright (c) 2021, Alden Torres
 *
 * Licensed under the terms of the MIT license.
 * Copy of the license at https://opensource.org/licenses/MIT
 */



const libecc_module = _libecc_js__WEBPACK_IMPORTED_MODULE_0__.default;






})();

ecc = __webpack_exports__;
/******/ })()
;